<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>关于茹炳晟《软件测试52讲》学习笔记</title>
    <link href="/2020/09/20/Note/"/>
    <url>/2020/09/20/Note/</url>
    
    <content type="html"><![CDATA[<h3 id="优秀的测试工程师需要这样做"><a href="#优秀的测试工程师需要这样做" class="headerlink" title="优秀的测试工程师需要这样做"></a>优秀的测试工程师需要这样做</h3><p>在面对势不可挡的ABC(AI人工智能、BigData大数据、Cloud云服务)技术浪潮下，无论是从被测对象本身的复杂性、多样性和规模性来讲，还是从测试技术以及测试基础架构从无到有的发展来讲，都需要测试工程师的知识面、测试设计能力、测试开发能力和测试平台化抽象能力有质的提升。关键以下三点：</p><ol><li>不仅需要从业务角度本身出发对软件进行手工测试验证，还更需要掌握完整的自动化测试开发技术来设计自动化测试用例</li><li>必须掌握设计开发测试基础架构的关键技术</li><li>必须系统性的思考如何将测试数据工具化、服务化、最终实现平台化</li></ol><hr><h3 id="等价类划分和边界值分析"><a href="#等价类划分和边界值分析" class="headerlink" title="等价类划分和边界值分析"></a>等价类划分和边界值分析</h3><ol><li><p>等价类划分方法，是将所有可能的输入数据划分成若干个子集，在每个子集中，如果任意一个输入数据对于揭露程序中潜在错误都具有同等效果，那么这样的子集就构成了一个等价类。后续只要从每个等价类中任意选取一个值进行测试，就可以用少量具有代表性的测试输入取得较好的测试覆盖结果。</p></li><li><p>边界值分析方法，是选取输入、输出的边界值进行测试。因为通常大量的软件错误是发生在输入或输出范围的边界上，所以需要对边界值进行重点测试，通常选取正好等于、刚刚大于或刚刚小于边界的值作为测试数据。</p></li></ol><p><code>边界值分析方法是等价类划分方法的一个补充</code><br><code>用例等价类：操作前提+预期结果 = 实际结果</code><br><code>边界值分析：操作过程(输入输出)的边界值试探</code></p><hr><h3 id="“好的”测试用例必须具备哪些特征"><a href="#“好的”测试用例必须具备哪些特征" class="headerlink" title="“好的”测试用例必须具备哪些特征"></a>“好的”测试用例必须具备哪些特征</h3><ol><li><p>整体完备性：”好的”测试用例一定是一个完备的整体，是有效测试用例的集合，能够完全覆盖测试需求和业务场景</p></li><li><p>等价类划分的准确性：指的是对于每个等价类都能保证只要其中一条用例输入测试通过，其它的用例也一定测试通过</p></li><li><p>等价类集合的完备性：需要保证所有可能的边界值和边界条件都已经正确识别</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用jemeter测试tomcat性能</title>
    <link href="/2020/02/15/use-jemeter-test-tomcat/"/>
    <url>/2020/02/15/use-jemeter-test-tomcat/</url>
    
    <content type="html"><![CDATA[<h1 id="使用jemeter测试tomcat性能"><a href="#使用jemeter测试tomcat性能" class="headerlink" title="使用jemeter测试tomcat性能"></a>使用jemeter测试tomcat性能</h1><p>JMeter是Apache组织开发的基于Java的压力测试工具。用于对软件做压力测试，它最初被设计用于Web应用测试，但后来扩展到其他测试领域。</p><p>下载地址：<a href="http://jmeter.apache.org/download_jmeter.cgi">http://jmeter.apache.org/download_jmeter.cgi</a></p><p>安装启动即可。</p><p><img src="https://ooo.0o0.ooo/2016/09/09/57d26181a3bbc.png"></p><span id="more"></span><h2 id="服务器环境"><a href="#服务器环境" class="headerlink" title="服务器环境"></a>服务器环境</h2><ul><li>CPU：Intel(R) Core(TM) i5-4590 CPU @ 3.30GHz</li><li>内存：1G</li><li>操作系统：CentOS6.8_x64</li><li>JDK：1.8.0_102</li><li>Tomcat：8.5.5</li></ul><p>下面所有测试都是基于1000个请求做的，且都是访问Tomcat默认的ROOT首页</p><h2 id="创建测试计划"><a href="#创建测试计划" class="headerlink" title="创建测试计划"></a>创建测试计划</h2><p><img src="https://ooo.0o0.ooo/2016/09/09/57d262594f2ec.png"><br><img src="https://ooo.0o0.ooo/2016/09/09/57d262640c284.png"><br><img src="https://ooo.0o0.ooo/2016/09/09/57d2626eddf57.png"></p><p>配置参数，这里我们进行多次测试.</p><p><img src="https://ooo.0o0.ooo/2016/09/09/57d262af81eaf.png"><br><img src="https://ooo.0o0.ooo/2016/09/09/57d262b9a7fe3.png"></p><table><thead><tr><th align="center">并发用户数</th><th align="center">吞吐量/每秒</th><th align="center">请求等待时间/毫秒</th><th align="center">错误请求数/百分比</th></tr></thead><tbody><tr><td align="center">10</td><td align="center">1999</td><td align="center">8</td><td align="center">0.00</td></tr><tr><td align="center">20</td><td align="center">2667</td><td align="center">11</td><td align="center">0.00</td></tr><tr><td align="center">30</td><td align="center">2746</td><td align="center">13</td><td align="center">0.00</td></tr><tr><td align="center">40</td><td align="center">2730</td><td align="center">16</td><td align="center">0.00</td></tr><tr><td align="center">50</td><td align="center">2682</td><td align="center">20</td><td align="center">0.00</td></tr><tr><td align="center">60</td><td align="center">2756</td><td align="center">23</td><td align="center">0.00</td></tr><tr><td align="center">70</td><td align="center">2764</td><td align="center">27</td><td align="center">0.00</td></tr><tr><td align="center">80</td><td align="center">2714</td><td align="center">32</td><td align="center">0.00</td></tr><tr><td align="center">90</td><td align="center">2131</td><td align="center">35</td><td align="center">0.00</td></tr><tr><td align="center">100</td><td align="center">2739</td><td align="center">38</td><td align="center">0.00</td></tr><tr><td align="center">200</td><td align="center">1404</td><td align="center">43</td><td align="center">0.34%</td></tr><tr><td align="center">300</td><td align="center">1066</td><td align="center">50</td><td align="center">0.77%</td></tr><tr><td align="center">400</td><td align="center">995</td><td align="center">52</td><td align="center">1.23%</td></tr><tr><td align="center">500</td><td align="center">1086</td><td align="center">46</td><td align="center">1.42%</td></tr><tr><td align="center">1000</td><td align="center">1163</td><td align="center">59</td><td align="center">2.83%</td></tr></tbody></table><p><img src="https://ooo.0o0.ooo/2016/09/09/57d276759cccc.png"></p><p><img src="https://ooo.0o0.ooo/2016/09/09/57d2768276105.png"></p><p>从上面的测试结果来看，在90-100个并发的时候出现不稳定，其他都比较平缓，请求时间一直在上涨。CPU负载均在60%左右。</p><p>在聚合报告中，会显示一行数据，共有10个字段，含义分别如下。</p><ul><li>Label：每个 JMeter 的 element（例如 HTTP Request）都有一个 Name 属性，这里显示的就是 Name 属性的值</li><li>#Samples：表示你这次测试中一共发出了多少个请求，如果模拟10个用户，每个用户迭代10次，那么这里显示100</li><li>Average：平均响应时间——默认情况下是单个 Request 的平均响应时间，当使用了 Transaction Controller 时，也可以以Transaction 为单位显示平均响应时间</li><li>Median：中位数，也就是 50％ 用户的响应时间</li><li>90% Line：90％ 用户的响应时间</li><li>Min：最小响应时间</li><li>Max：最大响应时间</li><li>Error%：本次测试中出现错误的请求的数量/请求的总数</li><li>Throughput：吞吐量——默认情况下表示每秒完成的请求数（Request per Second）</li><li>KB/Sec：每秒从服务器端接收到的数据量，相当于LoadRunner中的Throughput/Sec</li></ul><p>在下一章节我们介绍对tomcat8的优化。</p>]]></content>
    
    
    <categories>
      
      <category>Jmeter</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tomcat</tag>
      
      <tag>Jmeter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在CentOS 7上安装JDK</title>
    <link href="/2019/12/10/How%20Install%20Java%20On%20CentOS%207/"/>
    <url>/2019/12/10/How%20Install%20Java%20On%20CentOS%207/</url>
    
    <content type="html"><![CDATA[<h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><p>在开始本教程之前，请确保您以<code>root</code>用户或具有<code>sudo</code>特权的用户身份登录。</p><h2 id="OpenJDK说明"><a href="#OpenJDK说明" class="headerlink" title="OpenJDK说明"></a>OpenJDK说明</h2><p>OpenJDK是Java平台的开源项目，是<code>CentOS 7</code>中的默认<code>Java开发环境</code>和<code>Runtime</code>。</p><span id="more"></span><h2 id="Install-OpenJDK-11-JDK"><a href="#Install-OpenJDK-11-JDK" class="headerlink" title="Install OpenJDK 11 JDK"></a>Install OpenJDK 11 JDK</h2><p>在撰写本文时，OpenJDK 11是Java的当前LTS版本，也是要安装的推荐版本。您可以使用yum通过键入以下命令来安装它</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install java-11-openjdk-devel<br></code></pre></td></tr></table></figure><p>通过运行以下命令来验证安装，该命令将打印Java版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -version<br></code></pre></td></tr></table></figure><p>输出将如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">openjdk version <span class="hljs-string">&quot;11.0.3&quot;</span> 2019-04-16 LTS<br>OpenJDK Runtime Environment 18.9 (build 11.0.3+7-LTS)<br>OpenJDK 64-Bit Server VM 18.9 (build 11.0.3+7-LTS, mixed mode, sharing)<br></code></pre></td></tr></table></figure><p>看到此信息，您应该已经在CentOS系统上成功安装了OpenJDK 11。</p><h2 id="Install-OpenJDK-8-JDK"><a href="#Install-OpenJDK-8-JDK" class="headerlink" title="Install OpenJDK 8 JDK"></a>Install OpenJDK 8 JDK</h2><p>Java 8仍然是使用最广泛的Java版本。如果您的应用程序要求在CentOS 7系统上安装较旧的Java 8，请通过运行以下命令进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install java-1.8.0-openjdk-devel<br></code></pre></td></tr></table></figure><p>通过运行以下命令来验证安装，该命令将打印Java版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -version<br></code></pre></td></tr></table></figure><p>输出将如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">openjdk version <span class="hljs-string">&quot;1.8.0_242&quot;</span><br>OpenJDK Runtime Environment (build 1.8.0_242-b08)<br>OpenJDK 64-Bit Server VM (build 25.242-b08, mixed mode)<br></code></pre></td></tr></table></figure><p>看到此信息，您应该已经在CentOS系统上成功安装了OpenJDK 8。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CentOS 7</tag>
      
      <tag>JDK</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在CentOS 7上安装MySQL</title>
    <link href="/2019/12/10/How%20Install%20MySQL%20On%20CentOS%207/"/>
    <url>/2019/12/10/How%20Install%20MySQL%20On%20CentOS%207/</url>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>随着<code>CentOS 7 MySQL</code>的发布，<code>CentOS</code>的存储库中不再提供开源关系数据库管理系统，<code>MariaDB</code>已成为默认的数据库系统。 <code>MariaDB</code>是<code>MySQL</code>的向后兼容二进制替换版本。</p><p>在本教程中，我们将向您展示如何在<code>CentOS 7</code>上安装<code>MySQL</code>。</p><span id="more"></span><h2 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h2><p>在开始本教程之前，请确保您使用具有<code>sudo</code>特权的用户帐户或<code>root</code>用户登录到服务器。最佳做法是以<code>sudo</code>用户而不是<code>root</code>用户运行管理命令，如果您的系统上没有<code>sudo</code>用户，则可以按照以下说明创建一个。</p><p>正如我们在引言中提到的，<code>CentOS 7</code>存储库中默认不提供<code>MySQL</code>，因此我们将从<code>MySQL Yum</code>存储库中安装软件包。在以下各节中，我们将向您展示如何安装<code>MySQL 8.0</code>和<code>MySQL 5.7</code>。</p><p>您应该在<code>CentOS 7</code>服务器上仅安装一个<code>MySQL</code>版本。 如果不确定要安装哪个版本，请查阅要在服务器上部署的应用程序的文档。</p><h2 id="在CentOS-7上安装MySQL-8-0"><a href="#在CentOS-7上安装MySQL-8-0" class="headerlink" title="在CentOS 7上安装MySQL 8.0"></a>在<code>CentOS 7</code>上安装<code>MySQL 8.0</code></h2><p>在撰写本文时，<code>MySQL</code>的最新版本是8.0版。要将其安装在<code>CentOS 7</code>服务器上，请执行以下步骤：<br>01. 运行以下命令启用<code>MySQL 8.0</code>存储库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum localinstall https://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm<br></code></pre></td></tr></table></figure><ol start="2"><li>使用<code>yum</code>安装<code>MySQL 8.0</code>软件包：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install mysql-community-server<br></code></pre></td></tr></table></figure>在安装过程中，<code>yum</code>可能会提示您导入<code>MySQL GPG</code>密钥。输入<code>y</code>，然后按<code>Enter</code>。</li></ol><h2 id="在CentOS-7上安装MySQL-5-7"><a href="#在CentOS-7上安装MySQL-5-7" class="headerlink" title="在CentOS 7上安装MySQL 5.7"></a>在<code>CentOS 7</code>上安装<code>MySQL 5.7</code></h2><p>要在<code>CentOS 7</code>服务器上安装<code>MySQL</code>以前的稳定版本<code>MySQL，版本5.7</code>，请执行以下步骤：<br>01. 运行以下命令启用<code>MySQL 5.7</code>存储库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum localinstall https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm<br></code></pre></td></tr></table></figure><ol start="2"><li>运行以下命令安装<code>MySQL 5.7</code>软件包：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install mysql-community-server<br></code></pre></td></tr></table></figure></li></ol><hr><blockquote><p>以下部分是启用MySQL服务</p></blockquote><h2 id="开启Mysql服务"><a href="#开启Mysql服务" class="headerlink" title="开启Mysql服务"></a>开启Mysql服务</h2><p>安装完成后，运行以下命令添加开机自动启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl <span class="hljs-built_in">enable</span> mysqld<br></code></pre></td></tr></table></figure><p>运行以下命令启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl start mysqld<br></code></pre></td></tr></table></figure><p>运行以下命令检查<code>MySQL</code>服务状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl status mysqld<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">● mysqld.service - MySQL Server<br>   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)<br>   Active: active (running) since 三 2020-04-22 21:44:48 CST; 24h ago<br>     Docs: man:mysqld(8)<br>           http://dev.mysql.com/doc/refman/en/using-systemd.html<br> Main PID: 14997 (mysqld)<br>   CGroup: /system.slice/mysqld.service<br>           └─14997 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pid<br><br>4月 22 21:44:47 iZ2ze69bx00tmlmvhjlbd8Z systemd[1]: Stopped MySQL Server.<br>4月 22 21:44:47 iZ2ze69bx00tmlmvhjlbd8Z systemd[1]: Starting MySQL Server...<br>4月 22 21:44:48 iZ2ze69bx00tmlmvhjlbd8Z systemd[1]: Started MySQL Server.<br></code></pre></td></tr></table></figure><h2 id="提高MySQL安全性"><a href="#提高MySQL安全性" class="headerlink" title="提高MySQL安全性"></a>提高<code>MySQL</code>安全性</h2><p>首次启动<code>MySQL</code>服务时，系统将为<code>MySQL</code> <code>root</code>用户生成一个临时密码。您可以通过运行以下命令来找到密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo grep <span class="hljs-string">&#x27;temporary password&#x27;</span> /var/<span class="hljs-built_in">log</span>/mysqld.log<br></code></pre></td></tr></table></figure><p>输出如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">2020-04-22T13:13:18.179503Z 1 [Note] A temporary password is generated <span class="hljs-keyword">for</span> root@localhost: (NqV*R%Xa4yS<br></code></pre></td></tr></table></figure><p>记下密码，因为下一条命令将要求您输入临时的<code>root</code>密码。<br>运行<code>mysql_secure_installation</code>命令以提高我们的<code>MySQL</code>安装的安全性：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo mysql_secure_installation<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Securing the MySQL server deployment.<br><br>Enter password <span class="hljs-keyword">for</span> user root:<br></code></pre></td></tr></table></figure><p>输入临时密码后将要求您为<code>root</code>用户设置新的密码，密码长度至少为8个字符，并且至少包含一个大写字母，一个小写字母，一个数字和一个特殊字符。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">The existing password <span class="hljs-keyword">for</span> the user account root has expired. Please <span class="hljs-built_in">set</span> a new password.<br><br>New password:<br><br>Re-enter new password:<br></code></pre></td></tr></table></figure><p>该脚本还将要求您删除匿名用户，限制<code>root</code>用户对本地计算机的访问并删除测试数据库。您应该对所有问题回答<code>“Y”</code>（<code>Y</code>）。</p><h2 id="从命令行连接到MySQL"><a href="#从命令行连接到MySQL" class="headerlink" title="从命令行连接到MySQL"></a>从命令行连接到MySQL</h2><p>为了通过终端与<code>MySQL</code>交互，我们将使用<code>MySQL</code>客户端。<br>要以<code>root</code>用户身份登录到<code>MySQL</code>服务器，请输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql -u root -p<br></code></pre></td></tr></table></figure><p>这里输入先前您为<code>root</code>用户设置的新的密码。<br>输入密码，将会进入<code>MySQL Shell</code>界面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">Enter password:<br>Welcome to the MySQL monitor.  Commands end with ; or \g.<br>Your MySQL connection id is 524<br>Server version: 5.7.29 MySQL Community Server (GPL)<br><br>Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.<br><br>Oracle is a registered trademark of Oracle Corporation and/or its<br>affiliates. Other names may be trademarks of their respective<br>owners.<br><br>Type <span class="hljs-string">&#x27;help;&#x27;</span> or <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>. Type <span class="hljs-string">&#x27;\c&#x27;</span> to clear the current input statement.<br></code></pre></td></tr></table></figure><h2 id="创建一个新的数据库"><a href="#创建一个新的数据库" class="headerlink" title="创建一个新的数据库"></a>创建一个新的数据库</h2><p>运行以下命令创建新的数据库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">CREATE DATABASE new_database;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Query OK, 1 row affected (0.00 sec)<br></code></pre></td></tr></table></figure><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><p>刚才已经创建了数据库，下面我们来创建一个表来存储一些数据。<br>在运行创建表命令前，我们要先连接到数据库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use new_database;<br></code></pre></td></tr></table></figure><p>在此示例中，我们将创建一个简单的表，名为<code>contacts</code>，其中包含了三个字段：<code>id</code>、<code>name</code>、<code>email</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">CREATE TABLE contacts (<br>  id INT PRIMARY KEY,<br>  name VARCHAR(30),<br>  email VARCHAR(30)<br>);<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Query OK, 1 row affected (0.00 sec)<br></code></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>在本教程中，我们向您展示了如何在<code>CentOS 7</code>服务器上安装和保护<code>MySQL</code>服务器。我们还向您展示了如何连接到<code>MySQL Shell</code>以及如何创建新的数据库和表。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CentOS 7</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>adb实用命令</title>
    <link href="/2017/11/11/adb-command/"/>
    <url>/2017/11/11/adb-command/</url>
    
    <content type="html"><![CDATA[<h3 id="记录下常用的adb命令"><a href="#记录下常用的adb命令" class="headerlink" title="记录下常用的adb命令"></a>记录下常用的adb命令</h3><blockquote><p>adb devices       查看设备</p></blockquote><blockquote><p>adb kill-server       关闭adb后台进程</p></blockquote><blockquote><p>adb -s devices_id       制定连接某个设备</p></blockquote><blockquote><p>adb shell       进入管理设备</p></blockquote><blockquote><p>adb tcpip       脱离USB，tcp连接设备</p></blockquote><blockquote><p>adb connect devices_id       连接开启了tcp连接的设备</p></blockquote><blockquote><p>adb logcat       查看log</p></blockquote><blockquote><p>adb bugreport       收集日志数据</p></blockquote><blockquote><p>avdmanager list avd       列出所有Android虚拟机</p></blockquote><blockquote><p>emulator -avd avdName     启动Android虚拟机</p></blockquote><blockquote><p>adb shell dumpsys     获取连接设备所有系统服务的诊断输出</p></blockquote><blockquote><p>adb shell pm      调用软件包管理器</p></blockquote><blockquote><p>adb shell am      调用activity管理器</p></blockquote><blockquote><p>adb shell ps      显示设备当前所有进程状态</p></blockquote><blockquote><p>adb shell monkey      模拟随机点击事件</p></blockquote><blockquote><p>adb shell screencap /sdcard/path      截取设备屏幕</p></blockquote><blockquote><p>adb shell screenrecord /sdcard/path      录取设备屏幕</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>android</tag>
      
      <tag>adb</tag>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>配置tomcat+nginx反向代理</title>
    <link href="/2017/10/12/config-nginx-proxy/"/>
    <url>/2017/10/12/config-nginx-proxy/</url>
    
    <content type="html"><![CDATA[<h1 id="配置tomcat-nginx反向代理"><a href="#配置tomcat-nginx反向代理" class="headerlink" title="配置tomcat+nginx反向代理"></a>配置tomcat+nginx反向代理</h1><p>一般我们服务器对外只暴力22, 443, 80端口，其他的尽量都在内网访问，那么tomcat的8080端口是不应该对外访问的，<br>nginx作为一个性能卓越的web服务器提供了反向代理的功能，可以做到转发。</p><p>假设我们现在有一个域名绑定在服务器的80端口上，使用tomcat搭建的程序，但是我又不想修改tomcat端口，该怎么办呢？</p><p>nginx默认监听了80端口，配置文件在 <code>/usr/local/nginx/conf</code>文件夹下的 <code>nginx.conf</code>。</p><span id="more"></span><h2 id="取消默认站点"><a href="#取消默认站点" class="headerlink" title="取消默认站点"></a>取消默认站点</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost]<span class="hljs-comment"># cd /usr/local/nginx/conf</span><br>[root@localhost conf]<span class="hljs-comment"># vim nginx.conf</span><br></code></pre></td></tr></table></figure><p>将 <code>server</code> 块注释即可。然后我们在 <code>conf</code> 文件夹下创建一个 <code>vhost</code> 目录存储虚拟主机配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost conf]<span class="hljs-comment"># mkdir vhost</span><br></code></pre></td></tr></table></figure><p>创建一个tomcat的虚拟主机配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost conf]<span class="hljs-comment"># vim vhost/tomcat8.conf</span><br></code></pre></td></tr></table></figure><p>加入以下配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">server &#123;<br>listen       80;<br>server_name localhost;<br><br>location / &#123;<br>proxy_pass http://127.0.0.1:8080;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在 <code>nginx.conf</code> 中将 <code>vhost</code> 文件夹下的配置文件引入，只需在 <code>http</code> 块中加入一行 <code>include vhost/*.conf</code> 保存即可。</p><p>重启nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost conf]<span class="hljs-comment"># service nginx restart</span><br>Stopping Nginx:                                            [  OK  ]<br>Starting Nginx:                                            [  OK  ]<br></code></pre></td></tr></table></figure><p>查看tomcat是否已经启动，如果关闭将它开启，然后访问 <a href="http://192.168.100.128/">http://192.168.100.128/</a></p><p><img src="https://ooo.0o0.ooo/2016/09/09/57d260a9a1004.png"></p><p>这样tomcat的8080端口就被nginx转发了，我们此时用域名直接绑定到80端口即可！</p>]]></content>
    
    
    <categories>
      
      <category>Tomcat</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Apache</tag>
      
      <tag>Tomcat</tag>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安装nginx</title>
    <link href="/2017/10/12/install-nginx/"/>
    <url>/2017/10/12/install-nginx/</url>
    
    <content type="html"><![CDATA[<h1 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h1><p>在安装nginx前，需要确保系统安装了g++、gcc、openssl-devel、pcre-devel和zlib-devel软件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># yum -y install gcc-c++ zlib zlib-devel openssl openssl-devel pcre pcre-devel</span><br></code></pre></td></tr></table></figure><span id="more"></span><h2 id="下载nginx"><a href="#下载nginx" class="headerlink" title="下载nginx"></a>下载nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># wget http://nginx.org/download/nginx-1.10.1.tar.gz</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># tar -zxvf nginx-1.10.1.tar.gz</span><br>[root@localhost ~]<span class="hljs-comment"># cd nginx-1.10.1</span><br>[root@localhost nginx-1.10.1]<span class="hljs-comment"># ./configure --prefix=/usr/local/nginx --with-http_ssl_module</span><br></code></pre></td></tr></table></figure><p>上面 <code>--prefix</code> 配置nginx所在目录，<code>--with-http_ssl_module</code>配置nginx支持ssl，配置https会用到。</p><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost nginx-1.10.1]<span class="hljs-comment"># make &amp;&amp; make install</span><br></code></pre></td></tr></table></figure><p>来看看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost nginx-1.10.1]<span class="hljs-comment"># ll /usr/local/nginx/</span><br>total 16<br>drwxr-xr-x. 2 root root 4096 Sep  9 22:07 conf<br>drwxr-xr-x. 2 root root 4096 Sep  9 22:07 html<br>drwxr-xr-x. 2 root root 4096 Sep  9 22:07 logs<br>drwxr-xr-x. 2 root root 4096 Sep  9 22:07 sbin<br></code></pre></td></tr></table></figure><h2 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost nginx-1.10.1]<span class="hljs-comment"># cd /usr/local/nginx/sbin/</span><br>[root@localhost sbin]<span class="hljs-comment"># ./nginx</span><br></code></pre></td></tr></table></figure><p>这样就启动nginx，nginx默认监听在80端口，但是我们不要忘了把80端口对外开放。</p><p>在 <code>/etc/sysconfig/iptables</code> 中添加80端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT<br></code></pre></td></tr></table></figure><p>保存后重启一下防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost sbin]<span class="hljs-comment"># service iptables restart</span><br>iptables: Setting chains to policy ACCEPT: filter          [  OK  ]<br>iptables: Flushing firewall rules:                         [  OK  ]<br>iptables: Unloading modules:                               [  OK  ]<br>iptables: Applying firewall rules:                         [  OK  ]<br></code></pre></td></tr></table></figure><p>访问 <a href="http://192.168.100.128/">http://192.168.100.128/</a> 你将看到</p><p><img src="https://ooo.0o0.ooo/2016/09/09/57d253381cff7.png"></p><h2 id="关闭nginx"><a href="#关闭nginx" class="headerlink" title="关闭nginx"></a>关闭nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#查询nginx主进程号</span><br>[root@localhost sbin]<span class="hljs-comment"># ps -ef | grep nginx</span><br><span class="hljs-comment">#停止进程</span><br>[root@localhost sbin]<span class="hljs-comment"># kill -QUIT 主进程号</span><br><span class="hljs-comment">#快速停止</span><br>[root@localhost sbin]<span class="hljs-comment"># kill -TERM 主进程号</span><br><span class="hljs-comment">#强制停止</span><br>[root@localhost sbin]<span class="hljs-comment"># pkill -9 nginx</span><br></code></pre></td></tr></table></figure><h2 id="重启nginx"><a href="#重启nginx" class="headerlink" title="重启nginx"></a>重启nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># /usr/local/nginx/sbin/nginx -s reload</span><br></code></pre></td></tr></table></figure><h2 id="配置nginx为服务"><a href="#配置nginx为服务" class="headerlink" title="配置nginx为服务"></a>配置nginx为服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># vim /etc/init.d/nginx</span><br></code></pre></td></tr></table></figure><p>将服务脚本粘贴进去</p><p><em>服务脚本</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh  </span><br><span class="hljs-comment"># chkconfig: 2345 85 15  </span><br><span class="hljs-comment"># description:Nginx Server  </span><br><br>NGINX_HOME=/usr/<span class="hljs-built_in">local</span>/nginx  <br>NGINX_SBIN=<span class="hljs-variable">$NGINX_HOME</span>/sbin/nginx  <br>NGINX_CONF=<span class="hljs-variable">$NGINX_HOME</span>/conf/nginx.conf  <br>NGINX_PID=<span class="hljs-variable">$NGINX_HOME</span>/logs/nginx.pid  <br><br>NGINX_NAME=<span class="hljs-string">&quot;Nginx&quot;</span>  <br><br>. /etc/rc.d/init.d/<span class="hljs-built_in">functions</span>  <br><br><span class="hljs-keyword">if</span> [ ! -f <span class="hljs-variable">$NGINX_SBIN</span> ]  <br><span class="hljs-keyword">then</span>  <br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$NGINX_NAME</span> startup: <span class="hljs-variable">$NGINX_SBIN</span> not exists! &quot;</span>  <br>    <span class="hljs-built_in">exit</span>  <br><span class="hljs-keyword">fi</span>  <br><br><span class="hljs-function"><span class="hljs-title">start</span></span>() &#123;  <br>    <span class="hljs-variable">$NGINX_SBIN</span> -c <span class="hljs-variable">$NGINX_CONF</span>  <br>    ret=$?  <br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$ret</span> -eq 0 ]; <span class="hljs-keyword">then</span>  <br>        action $<span class="hljs-string">&quot;Starting <span class="hljs-variable">$NGINX_NAME</span>: &quot;</span> /bin/<span class="hljs-literal">true</span>  <br>    <span class="hljs-keyword">else</span>  <br>        action $<span class="hljs-string">&quot;Starting <span class="hljs-variable">$NGINX_NAME</span>: &quot;</span> /bin/<span class="hljs-literal">false</span>  <br>    <span class="hljs-keyword">fi</span>  <br>&#125;  <br><br><span class="hljs-function"><span class="hljs-title">stop</span></span>() &#123;  <br>    <span class="hljs-built_in">kill</span> `cat <span class="hljs-variable">$NGINX_PID</span>`  <br>    ret=$?  <br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$ret</span> -eq 0 ]; <span class="hljs-keyword">then</span>  <br>        action $<span class="hljs-string">&quot;Stopping <span class="hljs-variable">$NGINX_NAME</span>: &quot;</span> /bin/<span class="hljs-literal">true</span>  <br>    <span class="hljs-keyword">else</span>  <br>        action $<span class="hljs-string">&quot;Stopping <span class="hljs-variable">$NGINX_NAME</span>: &quot;</span> /bin/<span class="hljs-literal">false</span>  <br>    <span class="hljs-keyword">fi</span>  <br>&#125;  <br><br><span class="hljs-function"><span class="hljs-title">restart</span></span>() &#123;  <br>    stop  <br>    start  <br>&#125;  <br><br><span class="hljs-function"><span class="hljs-title">check</span></span>() &#123;  <br>    <span class="hljs-variable">$NGINX_SBIN</span> -c <span class="hljs-variable">$NGINX_CONF</span> -t  <br>&#125;  <br><br><br><span class="hljs-function"><span class="hljs-title">reload</span></span>() &#123;  <br>    <span class="hljs-built_in">kill</span> -HUP `cat <span class="hljs-variable">$NGINX_PID</span>` &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;reload success!&quot;</span>  <br>&#125;  <br><br><span class="hljs-function"><span class="hljs-title">relog</span></span>() &#123;  <br>    <span class="hljs-built_in">kill</span> -USR1 `cat <span class="hljs-variable">$NGINX_PID</span>` &amp;&amp; <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;relog success!&quot;</span>  <br>&#125;  <br><br><span class="hljs-keyword">case</span> <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span> <span class="hljs-keyword">in</span>  <br>    start)  <br>        start  <br>        ;;  <br>    stop)  <br>        stop  <br>        ;;  <br>    restart)  <br>        restart  <br>        ;;  <br>    check|chk)  <br>        check  <br>        ;;  <br>    status)  <br>        status -p <span class="hljs-variable">$NGINX_PID</span>  <br>        ;;  <br>    reload)  <br>        reload  <br>        ;;  <br>    relog)  <br>        relog  <br>        ;;  <br>    *)  <br>        <span class="hljs-built_in">echo</span> $<span class="hljs-string">&quot;Usage: <span class="hljs-variable">$0</span> &#123;start|stop|restart|reload|status|check|relog&#125;&quot;</span>  <br>        <span class="hljs-built_in">exit</span> 1  <br><span class="hljs-keyword">esac</span><br></code></pre></td></tr></table></figure><p>给脚本可执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># chmod +x /etc/init.d/nginx</span><br></code></pre></td></tr></table></figure><p>然后你就可以使用 <code>service nginx start</code> 的方式启动nginx了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># service nginx</span><br>Usage: /etc/init.d/nginx &#123;start|stop|restart|reload|status|check|relog&#125;<br></code></pre></td></tr></table></figure><h2 id="添加到开机项"><a href="#添加到开机项" class="headerlink" title="添加到开机项"></a>添加到开机项</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># chkconfig --add nginx</span><br>[root@localhost ~]<span class="hljs-comment"># chkconfig</span><br>auditd         0:off1:off2:on3:on4:on5:on6:off<br>blk-availability0:off1:on2:on3:on4:on5:on6:off<br>crond          0:off1:off2:on3:on4:on5:on6:off<br>ip6tables      0:off1:off2:on3:on4:on5:on6:off<br>iptables       0:off1:off2:on3:on4:on5:on6:off<br>iscsi          0:off1:off2:off3:on4:on5:on6:off<br>iscsid         0:off1:off2:off3:on4:on5:on6:off<br>lvm2-monitor   0:off1:on2:on3:on4:on5:on6:off<br>mdmonitor      0:off1:off2:on3:on4:on5:on6:off<br>multipathd     0:off1:off2:off3:off4:off5:off6:off<br>mysqld         0:off1:off2:on3:on4:on5:on6:off<br>netconsole     0:off1:off2:off3:off4:off5:off6:off<br>netfs          0:off1:off2:off3:on4:on5:on6:off<br>network        0:off1:off2:on3:on4:on5:on6:off<br>nginx          0:off1:off2:on3:on4:on5:on6:off<br>postfix        0:off1:off2:on3:on4:on5:on6:off<br>rdisc          0:off1:off2:off3:off4:off5:off6:off<br>restorecond    0:off1:off2:off3:off4:off5:off6:off<br>rsyslog        0:off1:off2:on3:on4:on5:on6:off<br>saslauthd      0:off1:off2:off3:off4:off5:off6:off<br>sshd           0:off1:off2:on3:on4:on5:on6:off<br>udev-post      0:off1:on2:on3:on4:on5:on6:off<br></code></pre></td></tr></table></figure><p>我们可以看到nginx已经被添加到开机启动了。</p>]]></content>
    
    
    <categories>
      
      <category>Nginx</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>配置tomcat为服务</title>
    <link href="/2017/10/11/config-tomcat-service/"/>
    <url>/2017/10/11/config-tomcat-service/</url>
    
    <content type="html"><![CDATA[<h1 id="配置tomcat为服务"><a href="#配置tomcat为服务" class="headerlink" title="配置tomcat为服务"></a>配置tomcat为服务</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># vim /etc/init.d/tomcat8</span><br></code></pre></td></tr></table></figure><p><em>tomcat服务脚本</em></p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># description: Apache Tomcat init script</span><br><span class="hljs-comment"># processname: tomcat  </span><br><span class="hljs-comment"># chkconfig: 234 20 80  </span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Copyright (C) 2014 Miglen Evlogiev</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># This program is free software: you can redistribute it and/or modify it under</span><br><span class="hljs-comment"># the terms of the GNU General Public License as published by the Free Software</span><br><span class="hljs-comment"># Foundation, either version 3 of the License, or (at your option) any later</span><br><span class="hljs-comment"># version.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># This program is distributed in the hope that it will be useful, but WITHOUT</span><br><span class="hljs-comment"># ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS</span><br><span class="hljs-comment"># FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># You should have received a copy of the GNU General Public License along with</span><br><span class="hljs-comment"># this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Initially forked from: gist.github.com/valotas/1000094</span><br><span class="hljs-comment"># Source: gist.github.com/miglen/5590986</span><br><br><br><span class="hljs-comment">#Location of JAVA_HOME (bin files)</span><br><span class="hljs-built_in">export</span> JAVA_HOME=/usr/<span class="hljs-built_in">local</span>/java/jdk1.8.0_102<br><span class="hljs-built_in">export</span> JRE_HOME=/usr/<span class="hljs-built_in">local</span>/java/jdk1.8.0_102/jre<br><br><span class="hljs-comment">#Add Java binary files to PATH</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$JAVA_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br><br><span class="hljs-comment">#CATALINA_HOME is the location of the bin files of Tomcat  </span><br><span class="hljs-built_in">export</span> CATALINA_HOME=/usr/<span class="hljs-built_in">local</span>/tomcat8<br><br><span class="hljs-comment">#CATALINA_BASE is the location of the configuration files of this instance of Tomcat</span><br><span class="hljs-built_in">export</span> CATALINA_BASE=/usr/<span class="hljs-built_in">local</span>/tomcat8<br><br><br><span class="hljs-comment">#TOMCAT_USAGE is the message if this script is called without any options</span><br>TOMCAT_USAGE=<span class="hljs-string">&quot;Usage: <span class="hljs-variable">$0</span> &#123;\e[00;32mstart\e[00m|\e[00;31mstop\e[00m|\e[00;31mkill\e[00m|\e[00;32mstatus\e[00m|\e[00;31mrestart\e[00m&#125;&quot;</span><br><br><span class="hljs-comment">#SHUTDOWN_WAIT is wait time in seconds for java proccess to stop</span><br>SHUTDOWN_WAIT=20<br><br><span class="hljs-function"><span class="hljs-title">tomcat_pid</span></span>() &#123;<br>        <span class="hljs-built_in">echo</span> `ps -fe | grep <span class="hljs-variable">$CATALINA_BASE</span> | grep -v grep | tr -s <span class="hljs-string">&quot; &quot;</span>|cut -d<span class="hljs-string">&quot; &quot;</span> -f2`<br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">start</span></span>() &#123;<br>  pid=$(tomcat_pid)<br>  <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$pid</span>&quot;</span> ]<br>  <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\e[00;31mTomcat is already running (pid: <span class="hljs-variable">$pid</span>)\e[00m&quot;</span><br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-comment"># Start tomcat</span><br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\e[00;32mStarting tomcat\e[00m&quot;</span><br>    <span class="hljs-comment">#ulimit -n 100000</span><br>    <span class="hljs-comment">#umask 007</span><br>    <span class="hljs-comment">#/bin/su -p -s /bin/sh $TOMCAT_USER</span><br>        <span class="hljs-keyword">if</span> [ `user_exists <span class="hljs-variable">$TOMCAT_USER</span>` = <span class="hljs-string">&quot;1&quot;</span> ]<br>        <span class="hljs-keyword">then</span><br>                /bin/su <span class="hljs-variable">$TOMCAT_USER</span> -c <span class="hljs-variable">$CATALINA_HOME</span>/bin/startup.sh<br>        <span class="hljs-keyword">else</span><br>                <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\e[00;31mTomcat user <span class="hljs-variable">$TOMCAT_USER</span> does not exists. Starting with <span class="hljs-subst">$(id)</span>\e[00m&quot;</span><br>                sh <span class="hljs-variable">$CATALINA_HOME</span>/bin/startup.sh<br>        <span class="hljs-keyword">fi</span><br>        status<br>  <span class="hljs-keyword">fi</span><br>  <span class="hljs-built_in">return</span> 0<br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">status</span></span>()&#123;<br>          pid=$(tomcat_pid)<br>          <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$pid</span>&quot;</span> ]<br>            <span class="hljs-keyword">then</span> <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\e[00;32mTomcat is running with pid: <span class="hljs-variable">$pid</span>\e[00m&quot;</span><br>          <span class="hljs-keyword">else</span><br>            <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\e[00;31mTomcat is not running\e[00m&quot;</span><br>            <span class="hljs-built_in">return</span> 3<br>          <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">terminate</span></span>() &#123;<br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\e[00;31mTerminating Tomcat\e[00m&quot;</span><br><span class="hljs-built_in">kill</span> -9 $(tomcat_pid)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">stop</span></span>() &#123;<br>  pid=$(tomcat_pid)<br>  <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$pid</span>&quot;</span> ]<br>  <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\e[00;31mStoping Tomcat\e[00m&quot;</span><br>    <span class="hljs-comment">#/bin/su -p -s /bin/sh $TOMCAT_USER</span><br>        sh <span class="hljs-variable">$CATALINA_HOME</span>/bin/shutdown.sh<br><br>    <span class="hljs-built_in">let</span> kwait=<span class="hljs-variable">$SHUTDOWN_WAIT</span><br>    count=0;<br>    until [ `ps -p <span class="hljs-variable">$pid</span> | grep -c <span class="hljs-variable">$pid</span>` = <span class="hljs-string">&#x27;0&#x27;</span> ] || [ <span class="hljs-variable">$count</span> -gt <span class="hljs-variable">$kwait</span> ]<br>    <span class="hljs-keyword">do</span><br>      <span class="hljs-built_in">echo</span> -n -e <span class="hljs-string">&quot;\n\e[00;31mwaiting for processes to exit\e[00m&quot;</span>;<br>      sleep 1<br>      <span class="hljs-built_in">let</span> count=<span class="hljs-variable">$count</span>+1;<br>    <span class="hljs-keyword">done</span><br><br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$count</span> -gt <span class="hljs-variable">$kwait</span> ]; <span class="hljs-keyword">then</span><br>      <span class="hljs-built_in">echo</span> -n -e <span class="hljs-string">&quot;\n\e[00;31mkilling processes didn&#x27;t stop after <span class="hljs-variable">$SHUTDOWN_WAIT</span> seconds\e[00m&quot;</span><br>      terminate<br>    <span class="hljs-keyword">fi</span><br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\e[00;31mTomcat is not running\e[00m&quot;</span><br>  <span class="hljs-keyword">fi</span><br><br>  <span class="hljs-built_in">return</span> 0<br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">user_exists</span></span>()&#123;<br>        <span class="hljs-keyword">if</span> id -u <span class="hljs-variable">$1</span> &gt;/dev/null 2&gt;&amp;1; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;1&quot;</span><br>        <span class="hljs-keyword">else</span><br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;0&quot;</span><br>        <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-keyword">case</span> <span class="hljs-variable">$1</span> <span class="hljs-keyword">in</span><br>start)<br>  start<br>;;<br>stop)  <br>  stop<br>;;<br>restart)<br>  stop<br>  start<br>;;<br>status)<br>status<br><span class="hljs-built_in">exit</span> $?  <br>;;<br><span class="hljs-built_in">kill</span>)<br>terminate<br>;;<br>*)<br><span class="hljs-built_in">echo</span> -e <span class="hljs-variable">$TOMCAT_USAGE</span><br>;;<br><span class="hljs-keyword">esac</span>    <br><span class="hljs-built_in">exit</span> 0<br></code></pre></td></tr></table></figure><p>这个脚本中需要注意你的jdk,jre位置和tomcat所在位置, 修改正确后保存。</p><h2 id="给服务授权"><a href="#给服务授权" class="headerlink" title="给服务授权"></a>给服务授权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># chmod +x /etc/init.d/tomcat8</span><br></code></pre></td></tr></table></figure><h2 id="使用服务"><a href="#使用服务" class="headerlink" title="使用服务"></a>使用服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># service tomcat8 status</span><br>Tomcat is not running<br><br>[root@localhost ~]<span class="hljs-comment"># service tomcat8 start</span><br>Starting tomcat<br>Using CATALINA_BASE:   /usr/<span class="hljs-built_in">local</span>/tomcat8<br>Using CATALINA_HOME:   /usr/<span class="hljs-built_in">local</span>/tomcat8<br>Using CATALINA_TMPDIR: /usr/<span class="hljs-built_in">local</span>/tomcat8/temp<br>Using JRE_HOME:        /usr/<span class="hljs-built_in">local</span>/java/jdk1.8.0_102/jre<br>Using CLASSPATH:       /usr/<span class="hljs-built_in">local</span>/tomcat8/bin/bootstrap.jar:/usr/<span class="hljs-built_in">local</span>/tomcat8/bin/tomcat-juli.jar<br>Tomcat started.<br>Tomcat is running with pid: 15282<br><br>[root@localhost ~]<span class="hljs-comment"># service tomcat8 stop</span><br>Stoping Tomcat<br>Using CATALINA_BASE:   /usr/<span class="hljs-built_in">local</span>/tomcat8<br>Using CATALINA_HOME:   /usr/<span class="hljs-built_in">local</span>/tomcat8<br>Using CATALINA_TMPDIR: /usr/<span class="hljs-built_in">local</span>/tomcat8/temp<br>Using JRE_HOME:        /usr/<span class="hljs-built_in">local</span>/java/jdk1.8.0_102/jre<br>Using CLASSPATH:       /usr/<span class="hljs-built_in">local</span>/tomcat8/bin/bootstrap.jar:/usr/<span class="hljs-built_in">local</span>/tomcat8/bin/tomcat-juli.jar<br><br>waiting <span class="hljs-keyword">for</span> processes to <span class="hljs-built_in">exit</span><br></code></pre></td></tr></table></figure><h2 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># chkconfig --add tomcat8</span><br>[root@localhost ~]<span class="hljs-comment"># chkconfig</span><br>auditd         0:off1:off2:on3:on4:on5:on6:off<br>blk-availability0:off1:on2:on3:on4:on5:on6:off<br>crond          0:off1:off2:on3:on4:on5:on6:off<br>ip6tables      0:off1:off2:on3:on4:on5:on6:off<br>iptables       0:off1:off2:on3:on4:on5:on6:off<br>iscsi          0:off1:off2:off3:on4:on5:on6:off<br>iscsid         0:off1:off2:off3:on4:on5:on6:off<br>lvm2-monitor   0:off1:on2:on3:on4:on5:on6:off<br>mdmonitor      0:off1:off2:on3:on4:on5:on6:off<br>multipathd     0:off1:off2:off3:off4:off5:off6:off<br>mysqld         0:off1:off2:on3:on4:on5:on6:off<br>netconsole     0:off1:off2:off3:off4:off5:off6:off<br>netfs          0:off1:off2:off3:on4:on5:on6:off<br>network        0:off1:off2:on3:on4:on5:on6:off<br>nginx          0:off1:off2:on3:on4:on5:on6:off<br>postfix        0:off1:off2:on3:on4:on5:on6:off<br>rdisc          0:off1:off2:off3:off4:off5:off6:off<br>redis_6379     0:off1:off2:on3:on4:on5:on6:off<br>restorecond    0:off1:off2:off3:off4:off5:off6:off<br>rsyslog        0:off1:off2:on3:on4:on5:on6:off<br>saslauthd      0:off1:off2:off3:off4:off5:off6:off<br>sshd           0:off1:off2:on3:on4:on5:on6:off<br>tomcat8        0:off1:off2:on3:on4:on5:off6:off<br>udev-post      0:off1:on2:on3:on4:on5:on6:off<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Tomcat</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Apache</tag>
      
      <tag>Tomcat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安装tomcat</title>
    <link href="/2017/10/11/install-tomcat/"/>
    <url>/2017/10/11/install-tomcat/</url>
    
    <content type="html"><![CDATA[<h1 id="安装tomcat"><a href="#安装tomcat" class="headerlink" title="安装tomcat"></a>安装tomcat</h1><p>上一章节我们安装了JDK的环境，Tomcat运行的前提是要有JDK环境。</p><h2 id="下载Tomcat"><a href="#下载Tomcat" class="headerlink" title="下载Tomcat"></a>下载Tomcat</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># wget http://mirror.bit.edu.cn/apache/tomcat/tomcat-8/v8.5.5/bin/apache-tomcat-8.5.5.tar.gz</span><br>[root@localhost ~]<span class="hljs-comment"># tar -zxvf apache-tomcat-8.5.5.tar.gz</span><br>[root@localhost ~]<span class="hljs-comment"># mv apache-tomcat-8.5.5 /usr/local/tomcat8</span><br></code></pre></td></tr></table></figure><span id="more"></span><h2 id="启动tomcat"><a href="#启动tomcat" class="headerlink" title="启动tomcat"></a>启动tomcat</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># cd /usr/local/tomcat8/bin/</span><br>[root@localhost bin]<span class="hljs-comment"># ./startup.sh</span><br>Using CATALINA_BASE:   /usr/<span class="hljs-built_in">local</span>/tomcat8<br>Using CATALINA_HOME:   /usr/<span class="hljs-built_in">local</span>/tomcat8<br>Using CATALINA_TMPDIR: /usr/<span class="hljs-built_in">local</span>/tomcat8/temp<br>Using JRE_HOME:        /usr/<span class="hljs-built_in">local</span>/java/jdk1.8.0_102/jre<br>Using CLASSPATH:       /usr/<span class="hljs-built_in">local</span>/tomcat8/bin/bootstrap.jar:/usr/<span class="hljs-built_in">local</span>/tomcat8/bin/tomcat-juli.jar<br>Tomcat started.<br></code></pre></td></tr></table></figure><p>现在打开 <a href="http://192.168.100.128:8080/">http://192.168.100.128:8080</a> 应该就可以看到Tomcat的汤姆猫页面。<br>而事实是你看到这个:</p><p><img src="https://ooo.0o0.ooo/2016/09/09/57d23ea8c353e.png"></p><p>哦草。。。为什么，机智的同学已经想到了，防火墙啊。对我们没有对防火墙进行任何配置，实际上8080端口是不对外开放的，<br>那么如何解决呢？</p><ul><li>关闭防火墙</li><li>开放8080端口</li></ul><h2 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h2><p>在CentOS上关闭防火墙是非常简单的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost bin]<span class="hljs-comment"># service iptables stop</span><br>iptables: Setting chains to policy ACCEPT: filter          [  OK  ]<br>iptables: Flushing firewall rules:                         [  OK  ]<br>iptables: Unloading modules:                               [  OK  ]<br></code></pre></td></tr></table></figure><p>这时候你再访问 <a href="http://192.168.100.128:8080/">http://192.168.100.128:8080</a> 就可以看到</p><p><img src="https://ooo.0o0.ooo/2016/09/09/57d23f752bfce.png"></p><p>当然这种方式是简单粗暴的，我们在真实服务器上不可能这么做，怎么做呢？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost bin]<span class="hljs-comment"># vim /etc/sysconfig/iptables</span><br></code></pre></td></tr></table></figure><p>我们看到 <code>iptables</code> 的默认配置是这样的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Firewall configuration written by system-config-firewall</span><br><span class="hljs-comment"># Manual customization of this file is not recommended.</span><br>*filter<br>:INPUT ACCEPT [0:0]<br>:FORWARD ACCEPT [0:0]<br>:OUTPUT ACCEPT [0:0]<br>-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT<br>-A INPUT -p icmp -j ACCEPT<br>-A INPUT -i lo -j ACCEPT<br>-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT<br>-A INPUT -j REJECT --reject-with icmp-host-prohibited<br>-A FORWARD -j REJECT --reject-with icmp-host-prohibited<br>COMMIT<br></code></pre></td></tr></table></figure><p>只需要添加一行和 <code>22</code> 端口一样的配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">-A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT<br></code></pre></td></tr></table></figure><p>这样既把8080的TCP端口对外开放了，然后重启防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost bin]<span class="hljs-comment"># service iptables restart</span><br>iptables: Setting chains to policy ACCEPT: filter          [  OK  ]<br>iptables: Flushing firewall rules:                         [  OK  ]<br>iptables: Unloading modules:                               [  OK  ]<br>iptables: Applying firewall rules:                         [  OK  ]<br></code></pre></td></tr></table></figure><p>可以达到同样的效果。</p>]]></content>
    
    
    <categories>
      
      <category>Tomcat</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tomcat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>优化tomcat8</title>
    <link href="/2017/10/11/optimization-tomcat8/"/>
    <url>/2017/10/11/optimization-tomcat8/</url>
    
    <content type="html"><![CDATA[<h1 id="优化tomcat8"><a href="#优化tomcat8" class="headerlink" title="优化tomcat8"></a>优化tomcat8</h1><p>我们优化tomcat的目的是提高并发性，即在多线程环境下能够快速响应，提高吞吐量。</p><p>首先在tomcat的bin目录下新建一个名为 <code>setenv.sh</code> 的文件，tomcat启动时会自动加载该文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost bin]<span class="hljs-comment"># vim setenv.sh</span><br></code></pre></td></tr></table></figure><span id="more"></span><p>加入tomcat基础配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/usr/bin</span><br><br><span class="hljs-built_in">export</span> CATALINA_HOME=/usr/<span class="hljs-built_in">local</span>/tomcat8<br><span class="hljs-built_in">export</span> CATALINA_BASE=/usr/<span class="hljs-built_in">local</span>/tomcat8<br></code></pre></td></tr></table></figure><h2 id="JAVA-OPTS"><a href="#JAVA-OPTS" class="headerlink" title="JAVA_OPTS"></a>JAVA_OPTS</h2><p>加入如下配置，我们服务器的内存是1G。这里我设置最大占用768</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> JAVA_OPTS=<span class="hljs-string">&quot;<span class="hljs-variable">$JAVA_OPTS</span>\</span><br><span class="hljs-string"> -server\</span><br><span class="hljs-string"> -Xms768m\</span><br><span class="hljs-string"> -Xmx768m\</span><br><span class="hljs-string"> -Xss512k\</span><br><span class="hljs-string"> -Djava.awt.headless=true\</span><br><span class="hljs-string"> -Dfile.encoding=utf-8\</span><br><span class="hljs-string"> -Djava.net.preferIPv4Stack=true\</span><br><span class="hljs-string"> -Djava.security.egd=file:/dev/./urandom&quot;</span><br></code></pre></td></tr></table></figure><ul><li>-server：表示这是应用于服务器的配置，JVM 内部会有特殊处理的</li><li>-Xms768m：设置JVM最大可用内存为768MB</li><li>-Xmx768m：设置JVM最小内存为768MB。此值可以设置与-Xmx相同，以避免每次垃圾回收完成后JVM重新分配内存。</li><li>-Dfile.encoding：默认文件编码</li><li>-Djava.net.preferIPv4Stack：使用IPV4</li><li>-Djava.security.egd：<a href="http://fengbin2005.iteye.com/blog/2313845">详细解释</a></li></ul><h2 id="优化server-xml"><a href="#优化server-xml" class="headerlink" title="优化server.xml"></a>优化<code>server.xml</code></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">Connector</span>  <span class="hljs-attr">port</span>=<span class="hljs-string">&quot;8080&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">maxThreads</span>=<span class="hljs-string">&quot;8000&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">minSpareThreads</span>=<span class="hljs-string">&quot;215&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">maxSpareThreads</span>=<span class="hljs-string">&quot;2048&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">connectionTimeout</span>=<span class="hljs-string">&quot;20000&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">redirectPort</span>=<span class="hljs-string">&quot;8443&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">acceptCount</span>=<span class="hljs-string">&quot;100&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">debug</span>=<span class="hljs-string">&quot;0&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">enableLookups</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">disableUploadTimeout</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">URIEncoding</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> <span class="hljs-attr">useBodyEncodingForURI</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p><strong>maxThreads 连接数限制</strong></p><p>maxThreads 是 Tomcat 所能接受最大连接数。一般设置不要超过8000以上，如果你的网站访问量非常大可能使用运行多个Tomcat实例的方法。</p><h2 id="安装apr"><a href="#安装apr" class="headerlink" title="安装apr"></a>安装apr</h2><p>安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># yum install -y openssl-devel</span><br></code></pre></td></tr></table></figure><p>下载apr相关包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># wget http://mirrors.tuna.tsinghua.edu.cn/apache//apr/apr-1.5.2.tar.gz</span><br>[root@localhost ~]<span class="hljs-comment"># wget http://mirrors.tuna.tsinghua.edu.cn/apache//apr/apr-util-1.5.4.tar.gz</span><br>[root@localhost ~]<span class="hljs-comment"># wget http://mirrors.tuna.tsinghua.edu.cn/apache//apr/apr-iconv-1.2.1.tar.gz</span><br><br><span class="hljs-comment"># 安装apr</span><br>[root@localhost ~]<span class="hljs-comment"># tar -zxvf apr-1.5.2.tar.gz</span><br><br>[root@localhost ~]<span class="hljs-comment"># cd apr-1.5.2</span><br>[root@localhost apr-1.5.2]<span class="hljs-comment"># ./configure &amp;&amp; make &amp;&amp; make install</span><br><br><span class="hljs-comment"># 安装apr-util</span><br>[root@localhost ~]<span class="hljs-comment"># tar -zxvf apr-util-1.5.4.tar.gz</span><br>[root@localhost ~]<span class="hljs-comment"># cd apr-util-1.5.4</span><br>[root@localhost apr-util-1.5.4]<span class="hljs-comment"># ./configure --with-apr=/usr/local/apr &amp;&amp; make &amp;&amp; make install</span><br><br><span class="hljs-comment"># 安装apr-iconv</span><br>[root@localhost ~]<span class="hljs-comment"># cd apr-iconv-1.2.1</span><br>[root@localhost apr-iconv-1.2.1]<span class="hljs-comment"># ./configure --with-apr=/usr/local/apr &amp;&amp; make &amp;&amp; make install</span><br></code></pre></td></tr></table></figure><p>配置tomcat</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost apr-iconv-1.2.1]<span class="hljs-comment"># cd /usr/local/tomcat8/bin/</span><br>[root@localhost bin]<span class="hljs-comment"># tar -zxf tomcat-native.tar.gz</span><br>[root@localhost bin]<span class="hljs-comment"># cd tomcat-native-1.2.8-src/native/</span><br>[root@localhost native]<span class="hljs-comment"># ./configure --with-apr=/usr/local/apr &amp;&amp; make &amp;&amp; make install</span><br></code></pre></td></tr></table></figure><p>这是提示我</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">configure: error: Your version of OpenSSL is not compatible with this version of tcnative<br></code></pre></td></tr></table></figure><p>由于centos 当前的yum 库只有1.0.1 的OpenSSL，所以我们需要手工安装1.0.2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># wget https://www.openssl.org/source/openssl-1.0.2-latest.tar.gz</span><br>[root@localhost ~]<span class="hljs-comment"># tar -zxf openssl-1.0.2-latest.tar.gz</span><br>[root@localhost ~]<span class="hljs-comment"># cd openssl-1.0.2h</span><br>[root@localhost openssl-1.0.2h]<span class="hljs-comment"># ./config --prefix=/usr/local/openssl -fPIC</span><br></code></pre></td></tr></table></figure><blockquote><p>注意这里需要加入 -fPIC参数，否则后面在安装tomcat native 组件会出错<br>注意：不要按照提示去运行 make depend</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost openssl-1.0.2h]<span class="hljs-comment"># make</span><br>[root@localhost openssl-1.0.2h]<span class="hljs-comment"># make install</span><br>[root@localhost openssl-1.0.2h]<span class="hljs-comment"># mv /usr/bin/openssl ~</span><br>[root@localhost openssl-1.0.2h]<span class="hljs-comment"># ln -s /usr/local/openssl/bin/openssl /usr/bin/openssl</span><br>[root@localhost openssl-1.0.2h]<span class="hljs-comment"># openssl version</span><br>OpenSSL 1.0.2h  3 May 2016<br></code></pre></td></tr></table></figure><p>重新安装 tomcat-native组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost openssl-1.0.2h]<span class="hljs-comment"># cd /usr/local/tomcat8/bin/tomcat-native-1.2.8-src/native/</span><br>[root@localhost native]<span class="hljs-comment"># ./configure --with-apr=/usr/local/apr --with-ssl=/usr/local/openssl</span><br>[root@localhost native]<span class="hljs-comment"># make &amp;&amp; make install</span><br></code></pre></td></tr></table></figure><p>在 <code>setenv.sh</code> 文件中添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">LD_LIBRARY_PATH=<span class="hljs-variable">$LD_LIBRARY_PATH</span>:/usr/<span class="hljs-built_in">local</span>/apr/lib<br><span class="hljs-built_in">export</span> LD_LIBRARY_PATH<br></code></pre></td></tr></table></figure><p>在 <code>server.xml</code> 中加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">Connector</span> <span class="hljs-attr">port</span>=<span class="hljs-string">&quot;8080&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">protocol</span>=<span class="hljs-string">&quot;org.apache.coyote.http11.Http11AprProtocol&quot;</span></span><br><span class="hljs-tag">/&gt;</span><br></code></pre></td></tr></table></figure><p>启动tomcat，打开控制台日志可以看到如图所示的日志</p><p><img src="https://ooo.0o0.ooo/2016/09/09/57d281093d907.png"></p>]]></content>
    
    
    <categories>
      
      <category>Tomcat</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Tomcat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git常用命令速查表</title>
    <link href="/2017/10/10/Git-Resources/"/>
    <url>/2017/10/10/Git-Resources/</url>
    
    <content type="html"><![CDATA[<blockquote><p>master: 默认开发分支</p></blockquote><blockquote><p>origin: 默认远程版本库</p></blockquote><blockquote><p>Head: 默认开发分支</p></blockquote><blockquote><p>Head^: Head的父提交</p></blockquote><span id="more"></span><h3 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">clone</span> &lt;url&gt;   <span class="hljs-comment">#克隆远程版本库</span><br>$ git init          <span class="hljs-comment">#初始化本地版本库</span><br></code></pre></td></tr></table></figure><h3 id="修改和提交"><a href="#修改和提交" class="headerlink" title="修改和提交"></a>修改和提交</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git status        <span class="hljs-comment">#查看状态</span><br>$ git diff          <span class="hljs-comment">#查看变更内容</span><br>$ git add .         <span class="hljs-comment">#跟踪所有改动过的文件</span><br>$ git add &lt;file&gt;    <span class="hljs-comment">#跟踪指定的文件</span><br>$ git mv &lt;old&gt;&lt;new&gt; <span class="hljs-comment">#文件改名</span><br>$ git rm&lt;file&gt;      <span class="hljs-comment">#删除文件</span><br>$ git rm --cached&lt;file&gt;            <span class="hljs-comment">#停止跟踪文件但不删除</span><br>$ git commit -m <span class="hljs-string">&quot;commit messages&quot;</span>  <span class="hljs-comment">#提交所有更新过的文件</span><br>$ git commit --amend               <span class="hljs-comment">#修改最后一次改动</span><br></code></pre></td></tr></table></figure><h3 id="查看提交历史"><a href="#查看提交历史" class="headerlink" title="查看提交历史"></a>查看提交历史</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git <span class="hljs-built_in">log</span>                    <span class="hljs-comment">#查看提交历史</span><br>$ git <span class="hljs-built_in">log</span> -p &lt;file&gt;          <span class="hljs-comment">#查看指定文件的提交历史</span><br>$ git blame &lt;file&gt;           <span class="hljs-comment">#以列表方式查看指定文件的提交历史</span><br></code></pre></td></tr></table></figure><h3 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git reset --hard HEAD      <span class="hljs-comment">#撤销工作目录中所有未提交文件的修改内容</span><br>$ git checkout HEAD &lt;file&gt;   <span class="hljs-comment">#撤销指定的未提交文件的修改内容</span><br>$ git revert &lt;commit&gt;        <span class="hljs-comment">#撤销指定的提交</span><br>$ git <span class="hljs-built_in">log</span> --before=<span class="hljs-string">&quot;1 days&quot;</span>  <span class="hljs-comment">#退回到之前1天的版本</span><br></code></pre></td></tr></table></figure><h3 id="分支与标签"><a href="#分支与标签" class="headerlink" title="分支与标签"></a>分支与标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git branch                   <span class="hljs-comment">#显示所有本地分支</span><br>$ git checkout &lt;branch/tag&gt;    <span class="hljs-comment">#切换到指定分支和标签</span><br>$ git branch &lt;new-branch&gt;      <span class="hljs-comment">#创建新分支</span><br>$ git branch -d &lt;branch&gt;       <span class="hljs-comment">#删除本地分支</span><br>$ git tag                      <span class="hljs-comment">#列出所有本地标签</span><br>$ git tag &lt;tagname&gt;            <span class="hljs-comment">#基于最新提交创建标签</span><br>$ git tag -d &lt;tagname&gt;         <span class="hljs-comment">#删除标签</span><br></code></pre></td></tr></table></figure><h3 id="合并与衍合"><a href="#合并与衍合" class="headerlink" title="合并与衍合"></a>合并与衍合</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git merge &lt;branch&gt;        <span class="hljs-comment">#合并指定分支到当前分支</span><br>$ git rebase &lt;branch&gt;       <span class="hljs-comment">#衍合指定分支到当前分支</span><br></code></pre></td></tr></table></figure><h3 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git remote -v                   <span class="hljs-comment">#查看远程版本库信息</span><br>$ git remote show &lt;remote&gt;        <span class="hljs-comment">#查看指定远程版本库信息</span><br>$ git remote add &lt;remote&gt; &lt;url&gt;   <span class="hljs-comment">#添加远程版本库</span><br>$ git fetch &lt;remote&gt;              <span class="hljs-comment">#从远程库获取代码</span><br>$ git pull &lt;remote&gt; &lt;branch&gt;      <span class="hljs-comment">#下载代码及快速合并</span><br>$ git push &lt;remote&gt; &lt;branch&gt;      <span class="hljs-comment">#上传代码及快速合并</span><br>$ git push &lt;remote&gt; :&lt;branch/tag-name&gt;  <span class="hljs-comment">#删除远程分支或标签</span><br>$ git push --tags                       <span class="hljs-comment">#上传所有标签</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
